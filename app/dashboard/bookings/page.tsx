"use client";
import { useEffect, useState } from "react";
import { supabase } from "../../../lib/supabase";
import { getBookingsByUserId } from '../../../lib/bookings';
import React from "react";

interface Booking {
  id: number;
  user_id: string;
  service_type: string;
  yacht_id?: number;
  flight_number?: string;
  flight_from?: string;
  flight_to?: string;
  departure_date?: string;
  airline?: string;
  booking_date: string;
  status: string;
  total_price?: number;
  number_of_guests?: number;
  customer_name?: string;
  customer_email?: string;
  customer_phone?: string;
}

interface Yacht {
  id: number;
  name: string;
}

export default function BookingsPage() {
  const [bookings, setBookings] = useState<Booking[]>([]);
  const [yachts, setYachts] = useState<Yacht[]>([]);
  const [loading, setLoading] = useState(true);
  const [selectedBooking, setSelectedBooking] = useState<Booking | null>(null);
  const [showModal, setShowModal] = useState(false);

  useEffect(() => {
    fetchData();
  }, []);

  const fetchData = async () => {
    setLoading(true);
    // L·∫•y bookings t·ª´ backend
    const { data: bookingsData } = await getBookingsByUserId();
    setBookings(bookingsData || []);
    // L·∫•y yachts ƒë·ªÉ join t√™n (c√≥ th·ªÉ v·∫´n d√πng supabase ho·∫∑c API backend n·∫øu c√≥)
    const { data: yachtsData } = await supabase
      .from("yachts")
      .select("id, name");
    setYachts(yachtsData || []);
    setLoading(false);
  };

  const getYachtName = (yacht_id?: number) => {
    if (!yacht_id) return "-";
    const yacht = yachts.find((y) => y.id === yacht_id);
    return yacht ? yacht.name : "-";
  };

  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      <h1 className="text-2xl font-bold mb-6">Qu·∫£n l√Ω ƒë∆°n ƒë·∫∑t ch·ªó</h1>
      {loading ? (
        <div>ƒêang t·∫£i...</div>
      ) : (
        <div className="bg-white rounded-lg shadow">
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">M√£ ƒë∆°n</th>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Lo·∫°i d·ªãch v·ª•</th>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Kh√°ch h√†ng</th>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Th√¥ng tin d·ªãch v·ª•</th>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">S·ªë kh√°ch</th>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">T·ªïng ti·ªÅn</th>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tr·∫°ng th√°i</th>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ng√†y ƒë·∫∑t</th>
                  <th className="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Thao t√°c</th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {bookings.map((booking) => (
                  <tr key={booking.id}>
                    <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-900">{booking.id}</td>
                    <td className="px-4 py-3 whitespace-nowrap text-sm">
                      {booking.service_type === "flight" ? (
                        <span className="inline-flex items-center gap-1 text-blue-600 font-semibold">‚úàÔ∏è V√© m√°y bay</span>
                      ) : (
                        <span className="inline-flex items-center gap-1 text-teal-600 font-semibold">üö¢ Du thuy·ªÅn</span>
                      )}
                    </td>
                    <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-900">{booking.customer_name || booking.user_id || '-'}</td>
                    <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-900">
                      {booking.service_type === "flight"
                        ? `${booking.flight_number || "-"} | ${booking.flight_from || "-"} ‚Üí ${booking.flight_to || "-"} | ${booking.departure_date ? new Date(booking.departure_date).toLocaleString() : "-"} | ${booking.airline || "-"}`
                        : getYachtName(booking.yacht_id)}
                    </td>
                    <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-900">{booking.number_of_guests || "-"}</td>
                    <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-900">{booking.total_price ? booking.total_price.toLocaleString() + "ƒë" : "-"}</td>
                    <td className="px-4 py-3 whitespace-nowrap">
                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${
                        booking.status === "pending"
                          ? "bg-yellow-100 text-yellow-800"
                          : booking.status === "confirmed"
                          ? "bg-green-100 text-green-800"
                          : "bg-red-100 text-red-800"
                      }`}>
                        {booking.status === "pending"
                          ? "Ch·ªù thanh to√°n"
                          : booking.status === "confirmed"
                          ? "ƒê√£ thanh to√°n"
                          : "ƒê√£ hu·ª∑"}
                      </span>
                    </td>
                    <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-900">{new Date(booking.booking_date).toLocaleDateString()}</td>
                    <td className="px-4 py-3 whitespace-nowrap text-sm text-gray-500">
                      <button className="text-teal-600 hover:text-teal-900" onClick={() => { setSelectedBooking(booking); setShowModal(true); }}>Chi ti·∫øt</button>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}

      {/* Modal chi ti·∫øt booking */}
      {showModal && selectedBooking && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-40">
          <div className="bg-white rounded-lg shadow-lg p-8 max-w-lg w-full relative">
            <button className="absolute top-2 right-2 text-gray-400 hover:text-gray-600 text-2xl" onClick={() => setShowModal(false)}>&times;</button>
            <h2 className="text-xl font-bold mb-4">Chi ti·∫øt ƒë∆°n ƒë·∫∑t ch·ªó #{selectedBooking.id}</h2>
            <div className="space-y-2">
              <div><b>Kh√°ch h√†ng:</b> {selectedBooking.customer_name || selectedBooking.user_id || '-'}</div>
              <div><b>D·ªãch v·ª•:</b> {selectedBooking.service_type === 'flight' ? '‚úàÔ∏è V√© m√°y bay' : 'üö¢ Du thuy·ªÅn'}</div>
              {selectedBooking.service_type === 'flight' ? (
                <>
                  <div><b>Chuy·∫øn bay:</b> {selectedBooking.flight_number || '-'} | {selectedBooking.flight_from || '-'} ‚Üí {selectedBooking.flight_to || '-'} | {selectedBooking.departure_date ? new Date(selectedBooking.departure_date).toLocaleString() : '-'} | {selectedBooking.airline || '-'}</div>
                </>
              ) : (
                <div><b>Du thuy·ªÅn:</b> {getYachtName(selectedBooking.yacht_id)}</div>
              )}
              <div><b>S·ªë kh√°ch:</b> {selectedBooking.number_of_guests || '-'}</div>
              <div><b>T·ªïng ti·ªÅn:</b> {selectedBooking.total_price ? selectedBooking.total_price.toLocaleString() + 'ƒë' : '-'}</div>
              <div><b>Tr·∫°ng th√°i:</b> {selectedBooking.status === 'pending' ? 'Ch·ªù thanh to√°n' : selectedBooking.status === 'confirmed' ? 'ƒê√£ thanh to√°n' : 'ƒê√£ hu·ª∑'}</div>
              <div><b>Ng√†y ƒë·∫∑t:</b> {new Date(selectedBooking.booking_date).toLocaleString()}</div>
              {selectedBooking.customer_email && <div><b>Email:</b> {selectedBooking.customer_email}</div>}
              {selectedBooking.customer_phone && <div><b>SƒêT:</b> {selectedBooking.customer_phone}</div>}
            </div>
          </div>
        </div>
      )}
    </div>
  );
} 